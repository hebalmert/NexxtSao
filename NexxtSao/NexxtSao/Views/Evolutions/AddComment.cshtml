@model NexxtSao.Models.MVC.EvolutionDetailAdd

@{
    ViewBag.Title = @Resources.Resource.ViewCreate;
}
@*<p></p>*@
@*<h2>@Resources.Resource.ViewCreate</h2>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @*<h4>@Resources.Resource.Estimate_IndexView_Titulo1</h4>
    <hr />*@
    <div class="form-row">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CompanyId)
        @Html.HiddenFor(model => model.ClientId)
        @Html.HiddenFor(model => model.EstimateId)
        @Html.HiddenFor(model => model.EstimateDetailId)

        <div class="col-md-6 mb-2">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @readonly = "True", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <hr />
    <div class="form-row">

        <div class="col-md-8 mb-2">
            @Html.LabelFor(model => model.Tratamiento, htmlAttributes: new { @class = "control-label col-md-9" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Tratamiento, new { htmlAttributes = new { @readonly = "True", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tratamiento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4 mb-2">
            @Html.LabelFor(model => model.Diente, htmlAttributes: new { @class = "control-label col-md-7" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Diente, new { htmlAttributes = new { @readonly = "True", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Diente, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <hr />
    <div class="form-row">
        <div class="col-md-8 mb-2">
            @Html.LabelFor(model => model.DentistId, htmlAttributes: new { @class = "control-label col-md-9" })
            <div class="col-md-12">
                @Html.DropDownList("DentistId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DentistId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4 mb-2">
            @Html.LabelFor(model => model.Porcentaje, htmlAttributes: new { @class = "control-label col-md-7" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Porcentaje, new { htmlAttributes = new { @readonly = "True", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Porcentaje, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <hr />
    <div class="form-row">
        <div class="col-md-12 mb-2">
            @Html.LabelFor(model => model.Detalle, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Detalle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Detalle, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <hr />
    <div class="form-row">
        <div class="col-md-6 mb-2">
            @Html.LabelFor(model => model.Saldo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Saldo, new { htmlAttributes = new { @readonly = "True", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Saldo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 mb-2">
            @Html.LabelFor(model => model.Abono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Abono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Abono, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <hr />
    <div class="form-row">
        <div class="col-md-12 mb-2">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" class="btn btn-success btn-sm" onclick="location.href = '@Url.Action("Details", new  { id = Model.ClientId})'">
                    <i class="fa fa-backspace"></i>
                    @Resources.Resource.ButtonBack
                </button>

                <button type="submit" class="btn btn-primary btn-sm">
                    <i class="fa fa-save"></i>
                    @Resources.Resource.ButtonSave
                </button>
            </div>
        </div>
    </div>
}


<script type="text/javascript">
    $("#Saldo, #Abono").on("input", function () {
        var val1 = parseInt($('#Saldo').val());
        var val2 = parseInt($('#Abono').val());

        if (!isNaN(val1) && !isNaN(val2) && val2 > val1)
            $('#Abono').val(0);
    });
</script>


<script type="text/javascript">
        $(document).ready(function () {
            $("#DentistId").change(function () {
                $("#Porcentaje").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetPorcentaje")',
                    dataType: 'json',
                    data: { dentistId: $("#DentistId").val(), estimatedetailId: $("#EstimateDetailId").val() },
                    success: function (data)
                    {
                        $("#Porcentaje").val(data);
                    },
                    error: function (ex) {
                        alert('Error de Lectura de Relacion' + ex);
                    }
                });
                return false;
            })
        });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}