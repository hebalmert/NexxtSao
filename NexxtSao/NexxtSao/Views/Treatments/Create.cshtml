@model NexxtSao.Models.MVC.Treatment

@{
    ViewBag.Title = @Resources.Resource.ViewCreate;
}
    <p></p>
<h2>@Resources.Resource.ViewCreate</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h4>@Resources.Resource.Treatment_IndexView_Titulo1</h4>
    <hr />
    <div class="form-row">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CompanyId)

        <div class="col-md-4 mb-2">
            @Html.LabelFor(model => model.TreatmentCategoryId, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.DropDownList("TreatmentCategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TreatmentCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4 mb-2">
            @Html.LabelFor(model => model.Servicio, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Servicio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Servicio, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <hr />
    <div class="form-row">
        <div class="col-md-4 mb-2">
            @Html.LabelFor(model => model.TaxId, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.DropDownList("TaxId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TaxId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <hr />
    <div class="form-row">
        <div class="col-md-4 mb-3">
            @Html.LabelFor(model => model.Precio1, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Precio1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Precio1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4 mb-3">
            @Html.LabelFor(model => model.Precio2, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Precio2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Precio2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4 mb-3">
            @Html.LabelFor(model => model.Precio3, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Precio3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Precio3, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <hr />
    <div class="form-row">
        <div class="col-md-4 mb-2">
            @Html.LabelFor(model => model.Detalle, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Detalle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Detalle, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <hr />
    <div class="form-row">
        <div class="col-md-4 mb-2">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" class="btn btn-success btn-sm" onclick="location.href = '@Url.Action("Index", new  {})'">
                    <i class="fa fa-backspace"></i>
                    @Resources.Resource.ButtonBack
                </button>

                <button type="submit" class="btn btn-primary btn-sm">
                    <i class="fa fa-save"></i>
                    @Resources.Resource.ButtonSave
                </button>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
