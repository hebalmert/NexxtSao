@model NexxtSao.Models.MVC.Company

@{
    ViewBag.Title = @Resources.Resource.ViewCreate;
}

<p></p>
<h2>@Resources.Resource.ViewCreate</h2>


@using (Html.BeginForm("Create", "Companies", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <h4>Company</h4>
    <hr />
    <div class="form-row">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="col-md-4 mb-2">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4 mb-2">
            @Html.LabelFor(model => model.Rif, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rif, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rif, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-row">
        <div class="col-md-4 mb-2">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-row">
        <div class="col-md-4 mb-2">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-row">
        <div class="col-md-4 mb-2">
            @Html.LabelFor(model => model.LogoFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="inputGroupFileAddon01">Upload</span>
                </div>
                <div class="custom-file">
                    @Html.TextBoxFor(modelo => modelo.LogoFile, new { type = "file", @class = "custom-file-input" })
                    <label class="custom-file-label" for="inputGroupFile01">Choose file</label>
                    @Html.ValidationMessageFor(model => model.LogoFile, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="form-row">
        <div class="col-md-4 mb-2">
            @Html.LabelFor(model => model.DateDesde, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateDesde, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateDesde, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4 mb-2">
            @Html.LabelFor(model => model.DateHasta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateHasta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateHasta, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-row">
        <div class="col-md-4 mb-2">
            @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CountryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4 mb-2">
            @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-row">
        <div class="col-md-4 mb-2">
            @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Activo)
                    @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="form-row">
        <div class="col-md-4 mb-2">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" class="btn btn-success btn-sm" onclick="location.href = '@Url.Action("Index", new  {})'">
                    <i class="fa fa-backspace"></i>
                    @Resources.Resource.ButtonBack
                </button>

                <button type="submit" class="btn btn-primary btn-sm">
                    <i class="fa fa-save"></i>
                    @Resources.Resource.ButtonSave
                </button>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
